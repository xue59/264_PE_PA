==20447== Memcheck, a memory error detector
==20447== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==20447== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==20447== Command: ./pe01
==20447== Parent PID: 16051
==20447== 
==20447== Use of uninitialised value of size 8
==20447==    at 0x3044A43A9B: _itoa_word (_itoa.c:195)
==20447==    by 0x3044A46652: vfprintf (vfprintf.c:1640)
==20447==    by 0x3044A4F189: printf (printf.c:35)
==20447==    by 0x400908: printArray (pe01.c:27)
==20447==    by 0x400BEF: test_largest_partial_sum (pe01.c:115)
==20447==    by 0x400D15: test_00_largest_partial_sum (pe01.c:141)
==20447==    by 0x400D9D: main (pe01.c:174)
==20447== 
==20447== Conditional jump or move depends on uninitialised value(s)
==20447==    at 0x3044A43AA5: _itoa_word (_itoa.c:195)
==20447==    by 0x3044A46652: vfprintf (vfprintf.c:1640)
==20447==    by 0x3044A4F189: printf (printf.c:35)
==20447==    by 0x400908: printArray (pe01.c:27)
==20447==    by 0x400BEF: test_largest_partial_sum (pe01.c:115)
==20447==    by 0x400D15: test_00_largest_partial_sum (pe01.c:141)
==20447==    by 0x400D9D: main (pe01.c:174)
==20447== 
==20447== Conditional jump or move depends on uninitialised value(s)
==20447==    at 0x3044A450E3: vfprintf (vfprintf.c:1640)
==20447==    by 0x3044A4F189: printf (printf.c:35)
==20447==    by 0x400908: printArray (pe01.c:27)
==20447==    by 0x400BEF: test_largest_partial_sum (pe01.c:115)
==20447==    by 0x400D15: test_00_largest_partial_sum (pe01.c:141)
==20447==    by 0x400D9D: main (pe01.c:174)
==20447== 
==20447== Conditional jump or move depends on uninitialised value(s)
==20447==    at 0x3044A45101: vfprintf (vfprintf.c:1640)
==20447==    by 0x3044A4F189: printf (printf.c:35)
==20447==    by 0x400908: printArray (pe01.c:27)
==20447==    by 0x400BEF: test_largest_partial_sum (pe01.c:115)
==20447==    by 0x400D15: test_00_largest_partial_sum (pe01.c:141)
==20447==    by 0x400D9D: main (pe01.c:174)
==20447== 
==20447== 
==20447== HEAP SUMMARY:
==20447==     in use at exit: 0 bytes in 0 blocks
==20447==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==20447== 
==20447== All heap blocks were freed -- no leaks are possible
==20447== 
==20447== For counts of detected and suppressed errors, rerun with: -v
==20447== Use --track-origins=yes to see where uninitialised values come from
==20447== ERROR SUMMARY: 6 errors from 4 contexts (suppressed: 6 from 6)
